{"version":3,"sources":["components/LoggedInContext.js","config.js","components/ProtectedRoute.js","components/Signup.js","crud.js","components/ForgotPassword.js","components/Home.js","components/Login.js","components/EditUserModal.js","components/UserCard.js","components/EditUsers.js","components/MainRouter.js","App.js","serviceWorker.js","index.js"],"names":["LoggedInContext","React","createContext","LoggedInProvider","props","useState","users","setUsers","loggedIn","setLoggedIn","token","setToken","Provider","value","checkUser","userName","password","rtnValue","fetch","method","headers","body","JSON","stringify","toLowerCase","then","httpResponse","ok","Error","json","response","console","log","hasOwnProperty","authenticated","catch","error","message","children","LoggedInConsumer","Consumer","ProtectedRoute","Component","component","rest","render","to","Signup","setUserName","setPassword","useContext","Form","Group","controlId","Label","Control","type","placeholder","onChange","event","preventDefault","target","Button","variant","onClick","endpoint","doc","err","createOne","ForgotPassword","Home","map","user","key","username","Login","EditUserModal","show","setShow","handleClose","Fragment","Modal","onHide","Header","closeButton","Title","Body","Footer","refresh","UserCard","Card","style","width","Img","src","Text","result","EditUsers","allUsers","useEffect","_id","MainRouter","path","App","className","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c3d45817.chunk.js","sourcesContent":["import React from 'react'\r\nimport {uriBase, apiVer} from '../config'\r\n\r\nconst LoggedInContext = React.createContext()\r\n\r\nconst LoggedInProvider = (props) => {\r\n\r\n    let [users, setUsers] = React.useState([])\r\n    let [loggedIn, setLoggedIn] = React.useState(false)\r\n    let [token, setToken] = React.useState(\"\")\r\n\r\n    // function to check user\r\n    const checkUser = (userName, password) => {\r\n\r\n        let rtnValue = false\r\n        // if username and password match return true\r\n\r\n        fetch(`${uriBase}/${apiVer}/login`,{\r\n            method: \"POST\",\r\n            headers: {\r\n            \"Content-Type\": \"application/json\"},\r\n            body: JSON.stringify({userName: userName.toLowerCase(), password})\r\n        })\r\n        .then (httpResponse => {\r\n\r\n            if(!httpResponse.ok ) {\r\n                throw new Error(\"Login Error\")\r\n            }\r\n\r\n            // convert json from endpoint into a js object\r\n            return httpResponse.json()\r\n        })\r\n        .then(response => {\r\n\r\n            console.log(response)\r\n            if (response.hasOwnProperty('authenticated')) {\r\n                \r\n                setLoggedIn(response.authenticated)\r\n\r\n                if (response.authenticated === true) {\r\n                    setToken(response.token)\r\n                }\r\n                rtnValue = response.authenticated\r\n\r\n            }\r\n        })\r\n        .catch(error =>{\r\n            console.log(error.message)\r\n        })\r\n\r\n        return rtnValue \r\n\r\n    }\r\n \r\n\r\n    return (\r\n        <LoggedInContext.Provider value={{users, loggedIn, checkUser, setUsers, token}}>\r\n            {props.children}\r\n        </LoggedInContext.Provider>\r\n    )\r\n\r\n\r\n\r\n}\r\n\r\nconst LoggedInConsumer = LoggedInContext.Consumer\r\nexport {LoggedInContext, LoggedInProvider, LoggedInConsumer}","// configure our api endpoints\r\nconst uriBase = (process.env.NODE_ENV !== \"production\" ? (\r\n    \"http://localhost:3000\"\r\n    ) : (\r\n        \"\"\r\n    )\r\n)\r\n\r\nconst apiVer = \"api/v1\"\r\n\r\nexport { uriBase, apiVer }","import React from 'react'\r\nimport { Route, Redirect } from 'react-router-dom'\r\nimport { LoggedInConsumer } from './LoggedInContext'\r\n\r\nconst ProtectedRoute = ({ component: Component, ...rest }) => {\r\n\r\n    return (\r\n\r\n        <LoggedInConsumer>\r\n            {\r\n                ({ loggedIn }) => (\r\n                    <Route\r\n                        render={props =>\r\n                            loggedIn ? <Component {...props} /> : <Redirect to=\"/\" />\r\n                        }\r\n                        {...rest}\r\n                    />\r\n                )\r\n            }\r\n        </LoggedInConsumer>\r\n    )\r\n}\r\n\r\nexport default ProtectedRoute","import React,{useContext} from 'react'\r\nimport Form from 'react-bootstrap/Form'\r\nimport Button from 'react-bootstrap/Button'\r\nimport { Link } from 'react-router-dom'\r\nimport { LoggedInConsumer, LoggedInContext } from \"./LoggedInContext\"\r\nimport { uriBase, apiVer } from '../config'\r\nimport {createOne} from '../crud'\r\n\r\n\r\nexport default function Signup(props) {\r\n\r\n    let [userName, setUserName] = React.useState(\"\")\r\n    let [password, setPassword] = React.useState(\"\")\r\n\r\n    let {token} = useContext(LoggedInContext)\r\n    const usernameOnChangeHandler = (event) => {\r\n\r\n        event.preventDefault()\r\n        setUserName(event.target.value)\r\n    }\r\n\r\n    const passwordOnChangeHandler = (event) => {\r\n\r\n        event.preventDefault()\r\n        setPassword(event.target.value)\r\n    }\r\n\r\n    const submitOnClickHandler = (event) => {\r\n        event.preventDefault()\r\n\r\n        try {\r\n            createOne(`${uriBase}/${apiVer}/users`, token ,{userName, password})\r\n            console.log(\"added\")\r\n        }\r\n        catch (err) {\r\n            console.log(err.message)\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>Sign Up</h1>\r\n            <LoggedInConsumer>\r\n                {\r\n                    value => (\r\n\r\n                        value.loggedIn ? (\r\n\r\n                            <h3>Logged In</h3>\r\n                        ) : (\r\n                                <h3>Not Logged In</h3>\r\n                            )\r\n                    )\r\n\r\n                }\r\n            </LoggedInConsumer>\r\n            <br></br>\r\n            <Form>\r\n                <Form.Group controlId=\"signupUserName\">\r\n                    <Form.Label>Username</Form.Label>\r\n                    <Form.Control type=\"text\" placeholder=\"Enter Username\" onChange={usernameOnChangeHandler} value={userName} />\r\n\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"signupPassword\">\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control type=\"password\" placeholder=\"Password\" onChange={passwordOnChangeHandler} value={password} />\r\n                </Form.Group>\r\n                <Button variant=\"outline-primary\" type=\"submit\" onClick={submitOnClickHandler}>\r\n                    Submit\r\n  </Button>\r\n            </Form>\r\n            <br></br>\r\n            <Link to=\"/Home\">Home Page</Link>\r\n        </div>\r\n    )\r\n}","// this file handles the api calls for our back end\r\n// functions require an api endpoint a token and a doc\r\n\r\n// create a record\r\nconst createOne = (endpoint, token, doc) => {\r\n\r\n    console.log(doc)\r\n    return fetch(endpoint, {\r\n        method: \"POST\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            \"Authorization\": `Bearer ${token}`\r\n        },\r\n        body: JSON.stringify(doc)\r\n    })\r\n        .then(httpResponse => {\r\n            if (!httpResponse.ok) {\r\n                throw new Error(`Error with POST at ${endpoint}`)\r\n            }\r\n\r\n            return httpResponse.json()\r\n        })\r\n        .catch(err => {\r\n            throw err\r\n        })\r\n}\r\n\r\n// Get all\r\nconst getAll = (endpoint) => {\r\n\r\n    return fetch(endpoint, {\r\n        method: \"GET\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n        },\r\n    })\r\n        .then(httpResponse => {\r\n            if (!httpResponse.ok) {\r\n                throw new Error(`Error with GET at ${endpoint}`)\r\n            }\r\n\r\n            return httpResponse.json()\r\n\r\n        })\r\n        .catch(err => {\r\n            throw err\r\n        })\r\n\r\n}\r\n\r\n// Get one\r\nconst getOne = () => {\r\n\r\n}\r\n\r\n// patch one\r\nconst patchOne = (endpoint, doc) => {\r\n\r\n    return fetch(endpoint, {\r\n        method: \"PATCH\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify(doc)\r\n    })\r\n        .then(httpResponse => {\r\n\r\n            if (!httpResponse.ok) {\r\n                throw new Error(`Error with PATCH at ${endpoint}`)\r\n            }\r\n\r\n            return httpResponse.json()\r\n        })\r\n        .catch(err => {\r\n            throw err\r\n        }) \r\n}\r\n// Update one\r\nconst updateOne = (endpoint, doc) => {\r\n\r\n    return fetch(endpoint, {\r\n        method: \"PUT\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify(doc)\r\n    })\r\n        .then(httpResponse => {\r\n\r\n            if (!httpResponse.ok) {\r\n                throw new Error(`Error with PUT at ${endpoint}`)\r\n            }\r\n\r\n            return httpResponse.json()\r\n        })\r\n        .catch(err => {\r\n            throw err\r\n        })\r\n}\r\n\r\n// Delete one\r\nconst deleteOne = (endpoint) => {\r\n\r\n    return fetch(endpoint, {\r\n        method: \"DELETE\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n        },\r\n    })\r\n        .then(httpResponse => {\r\n            if (!httpResponse.ok) {\r\n                throw new Error(`Error with DELETE at ${endpoint}`)\r\n            }\r\n\r\n            return httpResponse.json()\r\n\r\n        })\r\n        .catch(err => {\r\n            throw err\r\n        })\r\n\r\n}\r\n\r\n\r\nexport { createOne, getAll, getOne, patchOne, updateOne, deleteOne }","import React from 'react'\r\nimport Form from 'react-bootstrap/Form'\r\nimport Button from 'react-bootstrap/Button'\r\nimport { Link } from 'react-router-dom'\r\nimport { LoggedInConsumer } from \"./LoggedInContext\"\r\nimport { uriBase, apiVer } from \"../config\"\r\nimport { patchOne } from \"../crud\"\r\n\r\nexport default function ForgotPassword(props) {\r\n\r\n    let [userName, setUserName] = React.useState(\"\")\r\n    let [password, setPassword] = React.useState(\"\")\r\n\r\n    const usernameOnChangeHandler = (event) => {\r\n\r\n        event.preventDefault()\r\n        setUserName(event.target.value)\r\n    }\r\n\r\n    const passwordOnChangeHandler = (event) => {\r\n\r\n        event.preventDefault()\r\n        setPassword(event.target.value)\r\n    }\r\n\r\n    const submitOnClickHandler = (event) => {\r\n        event.preventDefault()\r\n\r\n        try {\r\n            patchOne(`${uriBase}/${apiVer}/users/${userName}`,{ password })\r\n            console.log(\"Patched\")\r\n        }\r\n        catch (err) {\r\n            console.log(err.message)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>Forgot Password</h1>\r\n            <br></br>\r\n            <LoggedInConsumer>\r\n                {\r\n                    value => (\r\n\r\n                        value.loggedIn ? (\r\n\r\n                            <h3>Logged In</h3>\r\n                        ) : (\r\n                                <h3>Not Logged In</h3>\r\n                            )\r\n                    )\r\n\r\n                }\r\n            </LoggedInConsumer>\r\n            <Form>\r\n                <Form.Group controlId=\"ForgotPassUserName\">\r\n                    <Form.Label>Username</Form.Label>\r\n                    <Form.Control type=\"text\" placeholder=\"Enter Username\" onChange={usernameOnChangeHandler} value={userName} />\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"forgotPassPassword\">\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control type=\"password\" placeholder=\"Password\" onChange={passwordOnChangeHandler} value={password} />\r\n                </Form.Group>\r\n                <Button variant=\"outline-primary\" type=\"submit\" onClick={submitOnClickHandler}>\r\n                    Submit\r\n  </Button>\r\n            </Form>\r\n            <br></br>\r\n            <Link to=\"/Home\">Home</Link>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { LoggedInContext } from \"./LoggedInContext\"\r\n\r\nexport default function Home(props) {\r\n\r\n    let {users, loggedIn} = React.useContext(LoggedInContext)\r\n\r\n    const isLoggedIn = () => {\r\n\r\n        if (loggedIn) {\r\n            return (<h3>Logged In</h3>)\r\n        } else {\r\n            return (<h3>Not Logged In</h3>)\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <div>\r\n\r\n            <h1>Welcome to the Home Page</h1>\r\n                      \r\n\r\n            <br></br>\r\n            <Link to=\"/login\">Login</Link>\r\n            <br></br>\r\n            <Link to=\"/signup\">Sign Up</Link>\r\n            <br></br>\r\n            <Link to=\"/forgotpassword\">Forgot Password</Link>\r\n            <br></br>\r\n            <Link to=\"/admin\">Edit Users</Link>\r\n            {isLoggedIn()}\r\n            <br></br>\r\n            {\r\n                users.map(user => {\r\n                    return <li key={user.username}>{user.username}</li>\r\n                })\r\n            }\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport Form from 'react-bootstrap/Form'\r\nimport Button from 'react-bootstrap/Button'\r\nimport { Link } from 'react-router-dom'\r\nimport { LoggedInConsumer, LoggedInContext } from \"./LoggedInContext\"\r\n\r\n\r\nexport default function Login(props) {\r\n\r\n    let [username, setUserName] = React.useState(\"\")\r\n    let [password, setPassword] = React.useState(\"\")\r\n\r\n    // context\r\n    let {checkUser} = React.useContext(LoggedInContext)\r\n\r\n    const usernameOnChangeHandler = (event) => {\r\n\r\n        event.preventDefault()\r\n        setUserName(event.target.value)\r\n    }\r\n\r\n    const passwordOnChangeHandler = (event) => {\r\n\r\n        event.preventDefault()\r\n        setPassword(event.target.value)\r\n    }\r\n\r\n    const submitOnClickHandler = (event) => {\r\n        event.preventDefault()\r\n\r\n        // check to see if user exists\r\n        checkUser(username, password)\r\n        // if exists check password\r\n\r\n        // display result\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>Login</h1>\r\n            <br></br>\r\n            <Form>\r\n                <Form.Group controlId=\"loginUserName\">\r\n                    <Form.Label>Username</Form.Label>\r\n                    <Form.Control type=\"text\" placeholder=\"Enter Username\" onChange={usernameOnChangeHandler} value={username} />\r\n\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"loginPassword\">\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control type=\"password\" placeholder=\"Password\" onChange={passwordOnChangeHandler} value={password} />\r\n                </Form.Group>\r\n                <Button variant=\"outline-primary\" type=\"submit\" onClick={submitOnClickHandler}>\r\n                    Submit\r\n  </Button>\r\n            </Form>\r\n            <br></br>\r\n            <Link to=\"/Home\">Home Page</Link>\r\n            <LoggedInConsumer>\r\n                {\r\n                    value => (\r\n\r\n                        value.loggedIn ? (\r\n\r\n                            <h3>Logged In</h3>\r\n                        ) : (\r\n                                <h3>Not Logged In</h3>\r\n                            )\r\n                    )\r\n\r\n                }\r\n            </LoggedInConsumer>\r\n        </div>\r\n    )\r\n}","import React, { useState } from 'react';\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Form from 'react-bootstrap/Form'\r\nimport { updateOne } from '../crud'\r\nimport { uriBase, apiVer } from '../config'\r\nconst EditUserModal = (props) => {\r\n\r\n    const [show, setShow] = useState(false);\r\n    const [userName, setUserName] = useState(props.user.userName)\r\n    const [password, setPassword] = useState(props.user.password)\r\n\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n\r\n    const userNameOnChangeHandler = (event) => {\r\n\r\n        event.preventDefault()\r\n        setUserName(event.target.value)\r\n    }\r\n\r\n    const passwordOnChangeHandler = (event) => {\r\n\r\n        event.preventDefault()\r\n        setPassword(event.target.value)\r\n    }\r\n\r\n    const saveOnClickHandler = (event) => {\r\n\r\n        event.preventDefault()\r\n\r\n        try {\r\n\r\n            updateOne(`${uriBase}/${apiVer}/users/${props.user.userName}`, { userName, password })\r\n            console.log(\"Updated\")\r\n\r\n        }\r\n        catch (err) {\r\n            console.log(err.message)\r\n        }\r\n\r\n        setShow(false)\r\n        props.refresh()\r\n    }\r\n    \r\n    return (\r\n        <React.Fragment>\r\n\r\n            <Button variant=\"primary\" onClick={handleShow}>Edit</Button>\r\n\r\n            <Modal show={show} onHide={handleClose}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>{`Editing: ${userName}`}</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <Form>\r\n                        <Form.Group controlId=\"editUserModalUsername\">\r\n                            <Form.Label>Username</Form.Label>\r\n                            <Form.Control type=\"text\" placeholder=\"Username\" onChange={userNameOnChangeHandler} value={userName} />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId=\"editUserModalPassword\">\r\n                            <Form.Label>Password</Form.Label>\r\n                            <Form.Control type=\"password\" placeholder=\"Password\" onChange={passwordOnChangeHandler} value={password} />\r\n                        </Form.Group>\r\n                    </Form>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={handleClose}>\r\n                        Cancel\r\n                </Button>\r\n                    <Button variant=\"primary\" onClick={saveOnClickHandler}>\r\n                        Save Changes\r\n                </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </React.Fragment>\r\n    );\r\n\r\n};\r\n\r\nexport default EditUserModal;","import React from 'react';\r\nimport Card from 'react-bootstrap/Card'\r\nimport Button from 'react-bootstrap/Button'\r\nimport { deleteOne } from '../crud'\r\nimport { uriBase, apiVer } from '../config'\r\nimport EditUserModal from './EditUserModal'\r\n\r\nconst UserCard = (props) => {\r\n\r\n    const deleteOnClickHandler = (event) => {\r\n\r\n        deleteOne(`${uriBase}/${apiVer}/users/${props.user.userName}`, props.user)\r\n            .then(result => {\r\n                props.refresh()\r\n            })\r\n            .catch(err => {\r\n                console.log(err.message)\r\n            })\r\n\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Card style={{ width: '18rem' }}>\r\n                <Card.Img variant=\"top\" src=\"holder.js/100px180\" />\r\n                <Card.Body>\r\n                    <Card.Title>{props.user.userName}</Card.Title>\r\n                    <Card.Text>\r\n                        Some quick example text to build on the card title and make up the bulk of\r\n                        the card's content.\r\n                    </Card.Text>\r\n                    <EditUserModal user={props.user} refresh={props.refresh}></EditUserModal>\r\n                    <Button variant=\"primary\" onClick={deleteOnClickHandler}>Delete</Button>\r\n                </Card.Body>\r\n            </Card>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default UserCard;","import React, { useState, useEffect } from 'react';\r\nimport { getAll } from '../crud'\r\nimport { uriBase, apiVer } from '../config'\r\nimport UserCard from './UserCard'\r\n\r\n\r\nconst EditUsers = (props) => {\r\n\r\n  const [users, setUsers] = useState([])\r\n\r\n  const refresh = () => {\r\n\r\n    getAll(`${uriBase}/${apiVer}/users`)\r\n      .then(allUsers => {\r\n        setUsers(allUsers)\r\n      })\r\n      .catch(err => {\r\n        console.log(err)\r\n      })\r\n  }\r\n\r\n  useEffect(() => {\r\n    refresh()\r\n  }, [])\r\n\r\n  return (\r\n    <div>\r\n      <h2>Users</h2>\r\n      {\r\n        users.map( user => {\r\n          return <UserCard key={user._id} user={user} refresh={refresh}></UserCard>\r\n        })\r\n      }\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditUsers","import React from 'react'\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\r\nimport {LoggedInProvider} from \"./LoggedInContext\"\r\nimport ProtectedRoute from \"./ProtectedRoute\"\r\n\r\nimport Signup from \"./Signup\"\r\nimport ForgotPassword from \"./ForgotPassword\"\r\nimport Home from \"./Home\"\r\nimport Login from \"./Login\"\r\nimport EditUsers from \"./EditUsers\"\r\n\r\nexport default function MainRouter() { \r\n\r\n    return (\r\n        <LoggedInProvider>\r\n            <Router>\r\n                <Switch>\r\n                    <Route path=\"/signup\" component={Signup}></Route>                    \r\n                    <Route path=\"/forgotpassword\" component={ForgotPassword}></Route>        \r\n                    <Route path=\"/login\" component={Login}></Route>\r\n                    <ProtectedRoute path=\"/admin\" component={EditUsers}></ProtectedRoute>\r\n                    <Route path=\"/\" component={Home}></Route>\r\n                </Switch>\r\n            </Router>\r\n        </LoggedInProvider>\r\n    )\r\n}","import React from 'react';\nimport './App.css';\nimport MainRouter from './components/MainRouter'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <MainRouter></MainRouter>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}